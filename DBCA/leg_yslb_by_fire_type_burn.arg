################################################################################
##
## Copyright 2023 Jonathan Schultz
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##
################################################################################
# csv2barGraph.py
#    --nologfile
#    --since 0
#    --until 45
#    --width 400
#    --height 200
#    --blocks 4
#    --whitespace 20
#    --colors red
#             orange
#             yellow
#             black
##    --title "Years since last burned by fire type: ${burnid}"
##    --subtitle "Reference date: 1 July ${baseyear}"
#    --ylabel "Area (percent of burn area)"
#    --xlabel "Years since last burned"
#>   --outfile leg_yslb_by_fire_type_burn/leg_yslb_by_fire_type_${burnid}_${baseyear}.svg
#<   leg_yslb_by_fire_type_burn/leg_yslb_by_fire_type_${burnid}_${baseyear}.csv
###########################################################################
#> event_history.sh
#    --nologfile
#    --nocomments
#    --eventtable "(
SELECT fireseason(fih_date1) AS year, 
       ST_Intersection(poly.geom, ST_Union(polyevent.geom)) AS geom,
       ARRAY_AGG(DISTINCT fih_cause) AS fih_causes
FROM ${basename}_poly AS poly,
     (SELECT view.poly_id, fih_date1, fih_cause, event.geom
      FROM dbca_burn_options_program_dbca_007 AS burn,
           ${basename}_view AS view,
      LATERAL (SELECT fih_date1, fih_cause, geom 
               FROM (SELECT unnest(view.dbca_fire_history_dbca_060_id) AS event_id) AS event_ids
               JOIN dbca_fire_history_dbca_060 ON dbca_fire_history_dbca_060.object_id = event_id
               WHERE fireseason(fih_date1) <= ${baseyear}
               LIMIT 1) AS event
      WHERE burn.burnid = '${burnid}'
      AND   view.legislated_lands_and_waters_dbca_011_id IS NOT NULL
      AND   ST_Intersects(view.geom, burn.geom)) AS polyevent
WHERE poly.id = polyevent.poly_id
GROUP BY year,
      poly.geom)"
#    --eventcolumns "
${baseyear} - year;
ST_Area(ST_Union(event.geom) FILTER(WHERE fih_causes = '{0}')::geography)/ST_Area((SELECT ST_Union(geom) FROM dbca_burn_options_program_dbca_007 AS burn WHERE burn.burnid='${burnid}')::geography)*100;
ST_Area(ST_Union(event.geom) FILTER(WHERE fih_causes = '{2}')::geography)/ST_Area((SELECT ST_Union(geom) FROM dbca_burn_options_program_dbca_007 AS burn WHERE burn.burnid='${burnid}')::geography)*100;
ST_Area(ST_Union(event.geom) FILTER(WHERE array_length(fih_causes,1) = 1 AND fih_causes != '{0}' AND fih_causes != '{2}')::geography)/ST_Area((SELECT ST_Union(geom) FROM dbca_burn_options_program_dbca_007 AS burn WHERE burn.burnid='${burnid}')::geography)*100;
ST_Area(ST_Union(event.geom) FILTER(WHERE array_length(fih_causes,1) != 1)::geography)/ST_Area((SELECT ST_Union(geom) FROM dbca_burn_options_program_dbca_007 AS burn WHERE burn.burnid='${burnid}')::geography)*100"
#    --eventgroups year
#    --order 0-year
#    --eventaliases "Years since last burned;Prescribed burn;Escaped prescribed burn;Other fire;Multiple types"
#>   --csvfile leg_yslb_by_fire_type_burn/leg_yslb_by_fire_type_${burnid}_${baseyear}.csv
